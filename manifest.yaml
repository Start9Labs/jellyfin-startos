id: jellyfin
title: "Jellyfin"
version: 10.8.10
release-notes: "Update upstream to 10.8.10 [Release Notes](https://github.com/jellyfin/jellyfin/releases/tag/v10.8.10)"
license: gpl
wrapper-repo: "https://github.com/Start9Labs/jellyfin-wrapper"
upstream-repo: "https://github.com/jellyfin/jellyfin"
support-site: "https://jellyfin.org/docs/"
marketing-site: https://jellyfin.org
donation-url: "https://opencollective.com/jellyfin/donate"
build: ["make"]
description:
  short: The Free Software Media System
  long: |
    Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /jellyfin/main
    filebrowser: /mnt/filebrowser
    nextcloud: /mnt/nextcloud
    cache: /cache
    config: /config
health-checks:
  main:
    name: Web Interface
    success-message: Jellyfin is ready to be visited in your browser.
    type: docker
    image: main
    entrypoint: check-web.sh
    args: []
    io-format: json
    inject: true
config:
  get:
    type: script
  set:
    type: script
properties: ~
volumes:
  main:
    type: data
  filebrowser:
    type: pointer
    package-id: filebrowser
    volume-id: main
    path: /data
    readonly: false
  nextcloud:
    type: pointer
    package-id: nextcloud
    volume-id: nextcloud
    path: /data
    readonly: false
  cache: 
    type: data
  config:
    type: data
interfaces:
  main:
    name: User Interface
    description: Jellyfin Main UI
    tor-config:
      port-mapping:
        80: "8096"
    lan-config:
      443:
        ssl: true
        internal: 8096
    ui: true
    protocols:
      - tcp
      - http
dependencies:
  filebrowser:
    version: "^2.14.1.1"
    description: Used to get media from File Browser
    requirement:
      type: opt-in
      how: Can alternatively use Nextcloud for file storage
  nextcloud:
    version: "^25.0.2"
    description: Used to get media from Nextcloud
    requirement:
      type: opt-in
      how: Can alternatively use Filebrowser for file storage

backup:
  create:
    type: script
  restore:
    type: script
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
